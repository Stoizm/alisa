const { SlashCommandBuilder, ChatInputCommandInteraction, ActionRowBuilder, ButtonBuilder, SelectMenuBuilder, EmbedBuilder } = require("discord.js")
const db = require("../../mod√ºller/database")
const ayarlar = require("../../ayarlar.json")
module.exports = {
    name: "test",
    data: new SlashCommandBuilder()
        .setName("test")
        .setDescription("Botun birisini kayƒ±t ederken vereceƒüi hatalarƒ± √∂nceden g√∂rmenize yardƒ±mcƒ± olur"),
    /**
     * @param {import("../../typedef").exportsRunSlash} param0 
     */
    async run({ int, sunucudb, alisa, hata, sunucuid, guild }) {
        try {

            // Kontroller
            if (!int.member.permissions.has("Administrator")) return hata("Y√∂netici", "yetki")
            
            int.reply({ embeds: [new EmbedBuilder().setDescription(`‚Ä¢ Veriler kontrol ediliyor, l√ºtfen biraz bekleyiniz... `).setColor("Orange")], fetchReply: true }).then(async mesaj => {
                let embed = new EmbedBuilder().setTitle("Sanki biraz yapƒ±lmasƒ± gereken ≈üeyler var gibi?").setColor("Blue").setTimestamp()
                    , rolhatalar = []
                    , yetkihatalari = []
                    , kanalhatalari = []
                    , oneriler = []
                    , botrolid = sunucudb.kayƒ±t.bot
                    , kayitsizrolid = sunucudb.kayƒ±t.kayƒ±tsƒ±z
                    , yetkilirolid = sunucudb.kayƒ±t.yetkili
                    , digerroller = []
                if (sunucudb.kayƒ±t.ayar) rolhatalar.push("‚Ä¢ Kayƒ±t ayarƒ±m kapalƒ± durumda, hi√ßbir kayƒ±t i≈ülemini yapamazsƒ±nƒ±z!")
                if (!kayitsizrolid) rolhatalar.push("‚Ä¢ Kayƒ±tsƒ±z √ºyelere verilecek rol ayarlanmamƒ±≈ü!")
                else digerroller.push(kayitsizrolid)
                if (!botrolid) rolhatalar.push("‚Ä¢ Botlara verilecek rol ayarlanmamƒ±≈ü!")
                else digerroller = [...digerroller, ...botrolid]
                if (sunucudb.kayƒ±t.secenek) {
                    const kayitrolid = sunucudb.kayƒ±t.normal
                    if (!kayitrolid) rolhatalar.push("‚Ä¢ √úyelere verilecek rol ayarlanmamƒ±≈ü!")
                    else digerroller = [...digerroller, ...kayitrolid]
                } else {
                    const erkekrolid = sunucudb.kayƒ±t.erkek
                    const kƒ±zrolid = sunucudb.kayƒ±t.kƒ±z
                    if (!erkekrolid) rolhatalar.push("‚Ä¢ Erkeklere verilecek rol ayarlanmamƒ±≈ü!")
                    else digerroller = [...digerroller, ...erkekrolid]
                    if (!kƒ±zrolid) rolhatalar.push("‚Ä¢ Kƒ±zlara verilecek rol ayarlanmamƒ±≈ü!")
                    else digerroller = [...digerroller, ...kƒ±zrolid]
                }
                let guildMe = int.guild.members.me
                if (!guildMe.permissions.has("ManageNicknames")) yetkihatalari.push("‚Ä¢ Benim isimleri d√ºzenleme yetkim yok")
                if (!guildMe.permissions.has("ManageRoles")) yetkihatalari.push("‚Ä¢ Benim rolleri d√ºzenleme yetkim yok")
                if (!yetkilirolid) rolhatalar.push("‚Ä¢ √úyeleri kayƒ±t eden yetkili rol√º ayarlanmamƒ±≈ü!")
                else {
                    if (guild.roles.cache.get(kayitsizrolid)?.position >= guildMe.roles.highest.position) rolhatalar.push("‚Ä¢ Kayƒ±tsƒ±z rol√ºn√ºn sƒ±rasƒ± benim rol√ºm√ºn sƒ±rasƒ±ndan y√ºksek olduƒüu i√ßin onlarƒ±n isimlerini deƒüi≈ütiremem")
                    const yuksekroluyari = digerroller.filter(a => guild.roles.cache.get(a).position >= guildMe.roles.highest.position)
                    if (yuksekroluyari.length) rolhatalar.push(`‚Ä¢ [${yuksekroluyari.map(a => "<@&" + a + ">").join(" | ")}] adlƒ± roller benim rol√ºm√ºn sƒ±rasƒ±ndan y√ºksek olduƒüu i√ßin bu rolleri ba≈ükalarƒ±na veremem`)
                }
                const kayitkanal = sunucudb.kayƒ±t.kanal
                const gunluk = sunucudb.kayƒ±t.g√ºnl√ºk
                const log = sunucudb.kayƒ±t.log
                const fields = []
                if (!kayitkanal) kanalhatalari.push("‚Ä¢ Kayƒ±tlarƒ±n yapƒ±lacaƒüƒ± kanal ayarlanmamƒ±≈ü!")
                else await guild.channels.cache.get(kayitkanal)?.send("Deneme").then(a => a.delete()).catch(() => rolhatalar.push("‚Ä¢ Kayƒ±t kanalƒ±na mesaj atabilme yetkim yok!"))
                if (!guildMe.permissions.has("Administrator")) oneriler.push("‚Ä¢ Botun d√ºzg√ºn √ßalƒ±≈ümasƒ± i√ßin bana y√∂netici yetkisi verdiƒüinizden emin olunuz")
                if (!gunluk) oneriler.push("‚Ä¢ Kayƒ±t g√ºnl√ºk kanalƒ± ayarlanmamƒ±≈ü")
                else await guild.channels.cache.get(gunluk)?.send("Deneme").then(a => a.delete()).catch(() => rolhatalar.push("‚Ä¢ Kayƒ±t g√ºnl√ºk kanalƒ±na mesaj atabilme yetkim yok!"))
                if (!log) oneriler.push("‚Ä¢ Kayƒ±t log kanalƒ± ayarlanmamƒ±≈ü")
                else await guild.channels.cache.get(log)?.send("Deneme").then(a => a.delete()).catch(() => rolhatalar.push("‚Ä¢ Kayƒ±t log kanalƒ±na mesaj atabilme yetkim yok!"))
                if (rolhatalar.length) fields.push({ name: `${ayarlar.emoji.rol} ROL HATALARI`, value: rolhatalar.join("\n") })
                if (yetkihatalari.length) fields.push({ name: "üß∞ YETKƒ∞ HATALARI", value: yetkihatalari.join("\n") })
                if (kanalhatalari.length) fields.push({ name: `${ayarlar.emoji.kanal} KANAL HATALARI`, value: kanalhatalari.join("\n") })
                if (oneriler.length) fields.push({ name: "üí¨ YAPILMASI √ñNERƒ∞LEN", value: oneriler.join("\n") })
                if (!fields.length) return mesaj.edit({ embeds: [embed.setTitle(`${ayarlar.emoji.cildir} ƒ∞≈üte buuu!!!`).setDescription(`Bot bu sunucuda kusursuz √ßalƒ±≈üƒ±yor, kayƒ±t i≈ülemlerini g√∂n√ºl rahatlƒ±ƒüƒ±yla yapabilirsiniz!`)] }).catch(err => { })
                embed.addFields(...fields)
                mesaj.edit({ embeds: [embed] }).catch(err => { })
            }).catch(err => { })
        } catch (e) {
            hata(`**‚ÄºÔ∏è <@${int.user.id}> Komutta bir hata olu≈ütu l√ºtfen daha sonra tekrar deneyiniz!**`, true).catch(err => { })
            int.client.hata(module.id.split("\\").slice(5).join("\\"), e)
            console.log(e)
        }
    }
}